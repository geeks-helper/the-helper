{"version":3,"file":"component---src-templates-tool-post-tsx-977bcfe879ba6e75f5b7.js","mappings":"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","sources":["webpack://gatsby-starter-apple/./src/components/comment.tsx","webpack://gatsby-starter-apple/./src/styles/category.ts","webpack://gatsby-starter-apple/./src/styles/dateTime.ts","webpack://gatsby-starter-apple/./src/features/WordsCount/style.ts","webpack://gatsby-starter-apple/./src/features/WordsCount/index.tsx","webpack://gatsby-starter-apple/./src/templates/toolPost.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from \"react\"\n\nimport { DARK } from \"~/src/constants/theme\"\nimport useSiteMetadata from \"~/src/hooks/useSiteMetadata\"\nimport ThemeContext from \"~/src/stores/themeContext\"\n\nconst src = \"https://utteranc.es\"\nconst utterancesSelector = \"iframe.utterances-frame\"\nconst LIGHT_THEME = \"github-light\"\nconst DARK_THEME = \"github-dark\"\n\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\n\nconst Comment = () => {\n  const site = useSiteMetadata()\n  const { repo } = site.utterances ?? { repo: undefined }\n  const theme = useContext(ThemeContext)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isUtterancesCreated = useRef(false)\n\n  useEffect(() => {\n    console.log({ repo })\n    if (!repo) return\n    let themeMode: ThemeMode\n\n    if (!isUtterancesCreated.current) {\n      themeMode =\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\n\n    const createUtterancesEl = () => {\n      const comment = document.createElement(\"script\")\n      const attributes = {\n        src: `${src}/client.js`,\n        // repo: \"geeks-helper/the-helper\",\n        repo: \"geeks-helper/the-helper-comment\",\n        \"issue-term\": \"url\",\n        label: \"comment\",\n        theme: themeMode,\n        crossOrigin: \"anonymous\",\n        async: \"true\",\n      }\n      Object.entries(attributes).forEach(([key, value]) => {\n        comment.setAttribute(key, value)\n      })\n      containerRef.current?.appendChild(comment)\n      isUtterancesCreated.current = true\n    }\n\n    const utterancesEl = containerRef.current?.querySelector(\n      utterancesSelector\n    ) as HTMLIFrameElement\n\n    const postThemeMessage = () => {\n      if (!utterancesEl) return\n      const message = {\n        type: \"set-theme\",\n        theme: themeMode,\n      }\n      utterancesEl?.contentWindow?.postMessage(message, src)\n    }\n    console.log({ bbbb: isUtterancesCreated.current })\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\n  }, [repo, theme])\n  return <div ref={containerRef} />\n}\n\nComment.displayName = \"comment\"\n\nexport default Comment\n","import styled from \"styled-components\"\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`\n\nexport default Category\n","import styled from \"styled-components\"\n\nconst DateTime = styled.time`\n  margin-top: 12px;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-regular);\n  color: var(--color-text-3);\n`\n\nexport default DateTime\n","import styled from \"styled-components\"\n\nexport const MarkdownStyles = `\n  font-family: Arial, sans-serif;\n  font-size: 16px;\n  line-height: 1.6;\n  color: #333;\n\n  h1 {\n    font-size: 2em;\n    margin: 1.2em 0;\n  }\n\n  h2 {\n    font-size: 1.5em;\n    margin: 1em 0;\n  }\n\n  h3 {\n    font-size: 1.2em;\n    margin: 1em 0;\n  }\n\n  p {\n    margin: 1em 0;\n  }\n\n  ul, ol {\n    margin: 1em 0;\n    padding-left: 1.5em;\n  }\n\n  li {\n    margin: 0.5em 0;\n  }\n\n  a {\n    color: #007acc;\n    text-decoration: underline;\n\n    &:hover {\n      color: #005fbf;\n    }\n  }\n`\n\nexport const WordsContWrapper = styled.div`\n  ${MarkdownStyles}\n  textarea {\n    border: 1px solid var(--color-blue);\n    width: 100%;\n    border-radius: 8px;\n    padding: 8px;\n  }\n`\n\nexport const CountInfo = styled.div`\n  font-size: 14px;\n  margin-top: 10px;\n  color: #777;\n  display: inline-block;\n`\n","import React, { type ChangeEvent, useEffect, useState } from \"react\"\n\nimport * as S from \"./style\"\n\ninterface WordsContProps {\n  value: string\n}\n\nconst WordsCont: React.FC<WordsContProps> = ({ value }) => {\n  const [wordCount, setWordCount] = useState<number>(0)\n  const [charCount, setCharCount] = useState<number>(0)\n  const [lineCount, setLineCount] = useState<number>(0)\n\n  const countWords = (text: string): number => {\n    const words = text.trim().split(/\\s+/)\n    return words.filter(word => word !== \"\").length\n  }\n\n  const countChars = (text: string): number => {\n    return text.length\n  }\n\n  const countLines = (text: string): number => {\n    return text.split(\"\\n\").length\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const text = e.target.value\n    const newWordCount = countWords(text)\n    const newCharCount = countChars(text)\n    const newLineCount = countLines(text)\n\n    // Update counts\n    setWordCount(newWordCount)\n    setCharCount(newCharCount)\n    setLineCount(newLineCount)\n  }\n\n  return (\n    <S.WordsContWrapper>\n      <textarea\n        rows={10}\n        cols={50}\n        value={value}\n        onChange={handleInputChange}\n        placeholder=\"Start typing...\"\n      />\n      <S.CountInfo>\n        Words: {wordCount} | Characters: {charCount} | Lines: {lineCount}\n      </S.CountInfo>\n    </S.WordsContWrapper>\n  )\n}\n\nexport default WordsCont\n","import React from \"react\"\n\nimport { type PageProps, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Comment from \"~/src/components/comment\"\nimport SEO from \"~/src/components/seo\"\nimport WordsCount from \"~/src/features/WordsCount\"\nimport Layout from \"~/src/layouts/layout\"\nimport Category from \"~/src/styles/category\"\nimport DateTime from \"~/src/styles/dateTime\"\nimport Markdown from \"~/src/styles/markdown\"\nimport { rhythm } from \"~/src/styles/typography\"\n\nconst toolPost: React.FC<PageProps<Queries.Query>> = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark!\n  const { title, desc, thumbnail, date, category, tool } = frontmatter!\n  console.log(\"xxxxxxxxxxxxxxxxxx\", tool)\n  const ogImagePath =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    thumbnail &&\n    thumbnail?.childImageSharp?.gatsbyImageData!.images!.fallback!.src\n\n  return (\n    <Layout>\n      <SEO title={title} desc={desc} image={ogImagePath} />\n      <main>\n        <article>\n          <OuterWrapper>\n            <InnerWrapper>\n              <div>\n                <header>\n                  <Info>\n                    <PostCategory>{category}</PostCategory>\n                    <Time dateTime={date!}>{date}</Time>\n                  </Info>\n                  <Title>{title}</Title>\n                  <Desc>{desc}</Desc>\n                </header>\n                <Divider />\n                <WordsCount />\n\n                <Divider />\n                <Markdown\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\n                  rhythm={rhythm}\n                />\n              </div>\n            </InnerWrapper>\n          </OuterWrapper>\n        </article>\n        <CommentWrap style={{ border: \"1px solid red\" }}>\n          <Comment />\n        </CommentWrap>\n      </main>\n    </Layout>\n  )\n}\n\nconst OuterWrapper = styled.div`\n  margin-top: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-lg);\n  }\n`\n\nconst InnerWrapper = styled.div`\n  width: var(--post-width);\n  margin: 0 auto;\n  padding-bottom: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: 87.5%;\n  }\n`\n\nconst CommentWrap = styled.section`\n  width: 100%;\n  padding: 0 var(--padding-sm);\n  margin: 0 auto;\n  margin-bottom: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: auto;\n  }\n`\n\nconst PostCategory = styled(Category)`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n`\n\nconst Info = styled.div`\n  margin-bottom: var(--sizing-md);\n`\n\nconst Time = styled(DateTime)`\n  display: block;\n  margin-top: var(--sizing-xs);\n`\n\nconst Desc = styled.p`\n  margin-top: var(--sizing-lg);\n  line-height: 1.5;\n  font-size: var(--text-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.31579;\n    font-size: 1.1875rem;\n  }\n`\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--color-gray-3);\n  margin-top: var(--sizing-lg);\n  margin-bottom: var(--sizing-lg);\n`\n\nconst Title = styled.h1`\n  font-weight: var(--font-weight-bold);\n  line-height: 1.1875;\n  font-size: var(--text-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    line-height: 1.21875;\n    font-size: 2.5rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.21875;\n    font-size: 2rem;\n  }\n`\n\nexport const query = graphql`\n  query ToolPostPage($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        desc\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, layout: FIXED)\n          }\n        }\n        date(formatString: \"YYYY-MM-DD\")\n        category\n        tool\n      }\n    }\n  }\n`\n\nexport default toolPost\n"],"names":["src","LIGHT_THEME","DARK_THEME","Comment","_site$utterances","site","useSiteMetadata","repo","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","_containerRef$current2","console","log","themeMode","current","DARK","document","body","dataset","utterancesEl","querySelector","bbbb","postThemeMessage","_utterancesEl$content","message","type","contentWindow","postMessage","createUtterancesEl","_containerRef$current","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","_ref","key","value","setAttribute","appendChild","React","ref","displayName","Category","styled","span","withConfig","componentId","DateTime","time","WordsContWrapper","div","CountInfo","wordCount","setWordCount","useState","charCount","setCharCount","lineCount","setLineCount","S","rows","cols","onChange","e","text","target","newWordCount","trim","split","filter","word","length","countWords","newCharCount","countChars","newLineCount","countLines","placeholder","OuterWrapper","_ref2","device","sm","InnerWrapper","_ref3","CommentWrap","section","_ref4","PostCategory","Info","Time","Desc","p","_ref5","Divider","Title","h1","_ref6","md","_ref7","_thumbnail$childImage","data","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","tool","ogImagePath","childImageSharp","gatsbyImageData","images","fallback","Layout","SEO","image","dateTime","WordsCount","Markdown","dangerouslySetInnerHTML","__html","rhythm","style","border"],"sourceRoot":""}