{"version":3,"file":"component---src-templates-tool-post-tsx-6504c517e0e551915d16.js","mappings":"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","sources":["webpack://the-helper/./src/components/comment.tsx","webpack://the-helper/./src/styles/category.ts","webpack://the-helper/./src/styles/dateTime.ts","webpack://the-helper/./src/images/tree.jpeg","webpack://the-helper/./src/features/ClipPathGenerator/style.ts","webpack://the-helper/./src/features/ClipPathGenerator/SelectDimensions/index.tsx","webpack://the-helper/./src/features/ClipPathGenerator/index.tsx","webpack://the-helper/./src/features/ScrabbleWordFinder/style.ts","webpack://the-helper/./src/features/ScrabbleWordFinder/index.tsx","webpack://the-helper/./src/components/MarkdownTable/index.tsx","webpack://the-helper/./src/features/WordsCount/style.ts","webpack://the-helper/./src/features/WordsCount/index.tsx","webpack://the-helper/./src/templates/toolPost.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from \"react\"\n\nimport { DARK } from \"~/src/constants/theme\"\nimport useSiteMetadata from \"~/src/hooks/useSiteMetadata\"\nimport ThemeContext from \"~/src/stores/themeContext\"\n\nconst src = \"https://utteranc.es\"\nconst utterancesSelector = \"iframe.utterances-frame\"\nconst LIGHT_THEME = \"github-light\"\nconst DARK_THEME = \"github-dark\"\n\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\n\nconst Comment = () => {\n  const site = useSiteMetadata()\n  const { repo } = site.utterances ?? { repo: undefined }\n  const theme = useContext(ThemeContext)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isUtterancesCreated = useRef(false)\n\n  useEffect(() => {\n    if (!repo) return\n    let themeMode: ThemeMode\n\n    if (!isUtterancesCreated.current) {\n      themeMode =\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\n\n    const createUtterancesEl = () => {\n      const comment = document.createElement(\"script\")\n      const attributes = {\n        src: `${src}/client.js`,\n        // repo: \"geeks-helper/the-helper\",\n        repo: \"geeks-helper/the-helper-comment\",\n        \"issue-term\": \"url\",\n        label: \"comment\",\n        theme: themeMode,\n        crossOrigin: \"anonymous\",\n        async: \"true\",\n      }\n      Object.entries(attributes).forEach(([key, value]) => {\n        comment.setAttribute(key, value)\n      })\n      containerRef.current?.appendChild(comment)\n      isUtterancesCreated.current = true\n    }\n\n    const utterancesEl = containerRef.current?.querySelector(\n      utterancesSelector\n    ) as HTMLIFrameElement\n\n    const postThemeMessage = () => {\n      if (!utterancesEl) return\n      const message = {\n        type: \"set-theme\",\n        theme: themeMode,\n      }\n      utterancesEl?.contentWindow?.postMessage(message, src)\n    }\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\n  }, [repo, theme])\n  return <div ref={containerRef} />\n}\n\nComment.displayName = \"comment\"\n\nexport default Comment\n","import styled from \"styled-components\"\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`\n\nexport default Category\n","import styled from \"styled-components\"\n\nconst DateTime = styled.time`\n  margin-top: 12px;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-regular);\n  color: var(--color-text-3);\n`\n\nexport default DateTime\n","export default __webpack_public_path__ + \"static/tree-ca99057283fd6f738b02ebda6809beef.jpeg\";","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n  position: relative;\n  width: ${({ width }) => `${width || 500}px`};\n  height: ${({ height }) => `${height || 600}px`};\n  border: 1px solid #ccc;\n  overflow: hidden;\n  padding: 10px;\n  background-image: ${({ img }) => `\n  linear-gradient(\n    rgba(255, 255, 255, 0.5),\n    rgba(255, 255, 255, 0.5)\n  ),\n  url(${img})`};\n`\n\nexport const DraggableCircle = styled.div`\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  position: absolute;\n\n  /* Hide the close button by default */\n  .close-button {\n    display: none;\n  }\n\n  /* Show the close button on hover */\n  &:hover .close-button {\n    display: block;\n  }\n`\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  /* top: -15px; */\n  /* right: -15px; */\n  width: 14px;\n  height: 14px;\n  background-color: #ff0000;\n  color: #fff;\n  border: none;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 8px;\n  padding: 0;\n`\n\nexport const ClipPathText = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n`\n\nexport const ButtonContainer = styled.div`\n  margin-top: 10px;\n`\n\nexport const SelectDimensionsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin: 24px 0;\n`\n\nexport const NumberInput = styled.input`\n  height: 42px;\n  display: inline-block;\n  font: inherit;\n  position: relative;\n  text-align: center;\n\n  min-width: 2rem;\n  padding: 0.5rem 0.25rem;\n  border-radius: 2rem;\n  box-shadow: inset 0 0.125rem #d3d0c9, inset -0.125rem 0 #d3d0c9,\n    inset 0 -0.125rem #d3d0c9;\n  cursor: pointer;\n  -webkit-transition: background 0.25s;\n  transition: background 0.25s;\n  -webkit-tap-highlight-color: transparent;\n  user-select: none;\n  font-family: inherit;\n  font-size: 1.1rem;\n  border-radius: 2rem;\n  box-shadow: inset 0 0 0 0.125rem #d3d0c9;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: textfield;\n  box-shadow: inset 0 0.125rem #d3d0c9, inset 0.125rem 0 #d3d0c9,\n    inset -0.125rem 0 #d3d0c9, inset 0 -0.125rem #d3d0c9;\n  :hover {\n    background: #d3d0c9;\n    -webkit-transition: background 0;\n    transition: background 0;\n  }\n  :focus {\n    background: #100a09;\n    z-index: 100;\n    color: #d3d0c9;\n    outline: 0;\n    box-shadow: inset 0 0 0 0.125rem #100a09, 0 0 0 0.125rem #100a09;\n  }\n`\n\nexport const Switch = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n`\nexport const SwitchInput = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n  :checked + .slider {\n    background-color: #2196f3;\n  }\n  :focus + .slider {\n    box-shadow: 0 0 1px #2196f3;\n  }\n  :checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n`\n\nexport const SwitchSpan = styled.span`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  border-radius: 34px;\n  :before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n`\n\nexport const SwitchWrapper = styled.div`\n  width: 100%;\n  margin: 24px 0;\n  justify-content: space-around;\n  display: flex;\n  align-items: center;\n`\n","import React, { type ChangeEvent } from \"react\"\n\nimport * as S from \"../style\"\n\ninterface Element {\n  x: number\n  y: number\n  // Add any other properties that elements have here\n}\n\ninterface SelectDimensionsProps {\n  width: number\n  height: number\n  setDimensions: (dimensions: { width: number; height: number }) => void\n  setElements: any\n  setShowBg: any\n  showBg: boolean\n}\n\nconst SelectDimensions: React.FC<SelectDimensionsProps> = ({\n  width,\n  height,\n  setDimensions,\n  setElements,\n  setShowBg,\n  showBg,\n}) => {\n  const handleWidthChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const newWidth = parseInt(e.target.value, 10)\n    setDimensions({ width: newWidth, height })\n\n    setElements((old: Element[]) =>\n      old.map((element: Element) => ({\n        ...element,\n        x: (element.x / width) * newWidth,\n      }))\n    )\n  }\n\n  const handleHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const newHeight = parseInt(e.target.value, 10)\n    setDimensions({ width, height: newHeight })\n\n    setElements((old: Element[]) =>\n      old.map((element: Element) => ({\n        ...element,\n        y: (element.y / height) * newHeight,\n      }))\n    )\n  }\n\n  return (\n    <>\n      <S.SwitchWrapper>\n        <b>Show outside clip-path</b>\n        <S.Switch className=\"switch\" htmlFor=\"switchBg\">\n          <S.SwitchInput\n            type=\"checkbox\"\n            id=\"switchBg\"\n            onChange={e => {\n              setShowBg(e.target.checked)\n            }}\n            checked={showBg}\n          />\n          <S.SwitchSpan className=\"slider round\"></S.SwitchSpan>\n        </S.Switch>\n      </S.SwitchWrapper>\n      <S.SelectDimensionsWrapper>\n        <label htmlFor=\"positiveNumber\">Demo Size</label>\n        <S.NumberInput\n          type=\"number\"\n          id=\"positiveNumber\"\n          name=\"positiveNumber\"\n          min=\"100\"\n          max=\"500\"\n          value={width}\n          onChange={handleWidthChange}\n          required\n        />\n        x\n        <S.NumberInput\n          type=\"number\"\n          id=\"positiveNumber2\"\n          name=\"positiveNumber2\"\n          min=\"100\"\n          max=\"600\"\n          value={height}\n          onChange={handleHeightChange}\n          required\n        />\n      </S.SelectDimensionsWrapper>\n    </>\n  )\n}\n\nexport default SelectDimensions\n","import React, { useState } from \"react\"\n\nimport Tree from \"../../images/tree.jpeg\"\n\nimport SelectDimensions from \"./SelectDimensions\"\nimport * as S from \"./style\"\n\nconst getRandomLightColor = (): string => {\n  const randomColor: number = Math.floor(Math.random() * 360) // Generate a random hue value\n  return `hsl(${randomColor}, 70%, 80%)` // Use HSL to ensure light backgrounds\n}\n\nconst getRandomPosition = ({ width, height }): { x: number; y: number } => {\n  // Generate random X and Y coordinates within the container's dimensions\n  const x: number = Math.random() * (width - 40)\n  const y: number = Math.random() * (height - 40)\n  return { x, y }\n}\n// Calculate percentages based on the container's dimensions\n\nconst ClipPathGenerator = () => {\n  const [dimensions, setDimensions] = useState({ width: 500, height: 600 })\n  const [showBg, setShowBg] = useState(true)\n  const [elements, setElements] = useState([\n    {\n      id: \"element1\",\n      ...getRandomPosition({\n        width: dimensions.width,\n        height: dimensions.height,\n      }),\n      backgroundColor: getRandomLightColor(),\n    },\n    {\n      id: \"element2\",\n      ...getRandomPosition({\n        width: dimensions.width,\n        height: dimensions.height,\n      }),\n      backgroundColor: getRandomLightColor(),\n    },\n    {\n      id: \"element3\",\n      ...getRandomPosition({\n        width: dimensions.width,\n        height: dimensions.height,\n      }),\n      backgroundColor: getRandomLightColor(),\n    },\n    // Add more elements as needed\n  ])\n\n  // Function to calculate clip-path value\n  const calculateClipPath = points => {\n    if (points.length < 3) {\n      return \"\"\n    }\n\n    const polygonPoints = points\n      .map(point => {\n        const xPercent = (point.x / dimensions.width) * 100\n        const yPercent = (point.y / dimensions.height) * 100\n        return `${xPercent.toFixed(2)}% ${yPercent.toFixed(2)}%`\n      })\n      .join(\", \")\n\n    return polygonPoints\n  }\n\n  const clipPathValue = calculateClipPath(elements)\n\n  const handleMouseDown = (event, elementIndex) => {\n    event.preventDefault()\n\n    const element = elements[elementIndex]\n\n    // Calculate the offset from the center of the circle\n    const offsetX = event.clientX - element.x\n    const offsetY = event.clientY - element.y\n\n    const onMouseMove = event => {\n      const updatedElements = [...elements]\n      updatedElements[elementIndex] = {\n        ...element,\n        x: Math.min(\n          Math.max(0, event.clientX - offsetX),\n          dimensions.width - 10\n        ),\n        y: Math.min(\n          Math.max(0, event.clientY - offsetY),\n          dimensions.height - 10\n        ),\n      }\n      setElements(updatedElements)\n    }\n\n    const onMouseUp = () => {\n      document.removeEventListener(\"mousemove\", onMouseMove)\n      document.removeEventListener(\"mouseup\", onMouseUp)\n    }\n\n    document.addEventListener(\"mousemove\", onMouseMove)\n    document.addEventListener(\"mouseup\", onMouseUp)\n  }\n\n  const handleAddCircle = () => {\n    // Add a new circle element with random background color and position\n    const newElement = {\n      id: `element${elements.length + 1}`,\n      ...getRandomPosition({\n        width: dimensions.width,\n        height: dimensions.height,\n      }),\n      backgroundColor: getRandomLightColor(),\n    }\n\n    setElements([...elements, newElement])\n  }\n\n  const handleRemoveCircle = elementIndex => {\n    // Remove the circle element at the specified index\n    const updatedElements = elements.filter(\n      (_, index) => index !== elementIndex\n    )\n    setElements(updatedElements)\n  }\n  return (\n    <div\n      style={{\n        border: \"1px solid red\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <SelectDimensions\n        setDimensions={setDimensions}\n        width={dimensions.width}\n        height={dimensions.height}\n        setElements={setElements}\n        showBg={showBg}\n        setShowBg={setShowBg}\n      />\n      <S.Container\n        width={dimensions.width}\n        height={dimensions.height}\n        img={showBg ? Tree : null}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: \"red\",\n            clipPath: ` polygon(${clipPathValue})`,\n            backgroundImage: `url(${Tree})`,\n          }}\n        ></div>\n        {elements.map((element, index) => (\n          <S.DraggableCircle\n            key={element.id}\n            style={{\n              left: element.x - 10 + \"px\",\n              top: element.y - 10 + \"px\",\n              backgroundColor: element.backgroundColor,\n            }}\n            onMouseDown={event => handleMouseDown(event, index)}\n          >\n            <S.CloseButton\n              className=\"close-button\"\n              onClick={() => handleRemoveCircle(index)}\n            >\n              X\n            </S.CloseButton>\n          </S.DraggableCircle>\n        ))}\n      </S.Container>\n      <S.ClipPathText>clip-path: polygon({clipPathValue})</S.ClipPathText>\n      <S.ButtonContainer>\n        <button onClick={handleAddCircle}>Add Circle</button>\n      </S.ButtonContainer>\n    </div>\n  )\n}\n\nexport default ClipPathGenerator\n","import styled from \"styled-components\"\n\nexport const ScrabbleFinderContainer = styled.div`\n  font-family: Arial, sans-serif;\n  text-align: center;\n`\n\nexport const InputContainer = styled.form`\n  margin-bottom: 20px;\n`\n\nexport const ScrabbleInput = styled.input`\n  padding: 10px;\n  font-size: 16px;\n  width: 100%;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`\n\nexport const ResultContainer = styled.div`\n  margin-top: 20px;\n`\n\nexport const ResultItem = styled.div`\n  margin-bottom: 4px;\n  font-size: 18px;\n  background: rgb(70 89 104);\n  color: white;\n  padding: 8px 8px;\n  border-radius: 4px;\n`\n\nexport const ItemWrapper = styled.div`\n  width: 100%;\n  border-top: 1px solid var(--color-gray-3);\n  border-bottom: 1px solid var(--color-gray-3);\n  padding: 16px;\n  display: flex;\n  gap: 16px;\n  align-items: flex-start;\n`\n\nexport const LettersCount = styled.div`\n  background: #6ec1e4;\n  font-size: 18px;\n  text-transform: uppercase;\n  color: white;\n  padding: 10px;\n  max-width: 200px;\n  letter-spacing: 2px;\n  line-height: 2;\n  border-radius: 8px;\n`\n\nexport const WordsWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n  flex-wrap: wrap;\n  flex: 1;\n`\n","import React, { useEffect, useState } from \"react\"\n\nimport { ALL_WORDS_DATA } from \"./ALL_WORDS_DATA\"\nimport * as S from \"./style\"\n\nfunction categorizeWords(\n  inputText: string,\n  wordArray: string[]\n): Record<number, string[]> {\n  const userInput = inputText.toLowerCase()\n  const categorizedWords: Record<number, string[]> = {}\n\n  wordArray.forEach(word => {\n    const lowercaseWord = word.toLowerCase()\n\n    // Check if the word contains the user's input as a substring\n    if (lowercaseWord.includes(userInput)) {\n      const wordLength = lowercaseWord.length\n\n      if (!categorizedWords[wordLength]) {\n        categorizedWords[wordLength] = []\n      }\n\n      categorizedWords[wordLength].push(lowercaseWord)\n    }\n  })\n\n  return categorizedWords\n}\n\nconst ScrabbleWordFinder = () => {\n  const [wordsData, setWordData] = useState({})\n  const [inputText, setInputText] = useState(\"\")\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setWordData(categorizeWords(inputText, ALL_WORDS_DATA))\n  }\n  const handleInputChange = e => {\n    const searchText = e.target.value.toLowerCase()\n    setInputText(searchText)\n  }\n  const word_arr = Object.entries(wordsData)\n  return (\n    <S.ScrabbleFinderContainer>\n      <h1>Scrabble Word Finder</h1>\n      <S.InputContainer onSubmit={handleSubmit}>\n        <label htmlFor=\"scrabbleInput\">Enter a word or part of a word:</label>\n        <S.ScrabbleInput\n          id=\"scrabbleInput\"\n          type=\"text\"\n          value={inputText}\n          onChange={handleInputChange}\n          placeholder=\"Enter your letters...\"\n        />\n        <button type=\"submit\">submit</button>\n      </S.InputContainer>\n      <S.ResultContainer>\n        <h2>Matching Words:</h2>\n        {word_arr?.length &&\n          word_arr.map(item => {\n            return (\n              <S.ItemWrapper key={item[0]}>\n                <S.LettersCount>\n                  {item[0]} Letter words({item[1].length})\n                </S.LettersCount>\n                <S.WordsWrapper>\n                  {item[1].map(word => (\n                    <S.ResultItem key={word}>{word}</S.ResultItem>\n                  ))}\n                </S.WordsWrapper>\n              </S.ItemWrapper>\n            )\n          })}\n      </S.ResultContainer>\n    </S.ScrabbleFinderContainer>\n  )\n}\n\nexport default ScrabbleWordFinder\n","import React, { useEffect, useState } from \"react\"\n\nimport styled from \"styled-components\"\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-family: Arial, sans-serif;\n  margin-top: 24px;\n`\n\nconst Th = styled.th`\n  background-color: #f2f2f2;\n  padding: 10px;\n  text-align: center;\n`\n\nconst Td = styled.td`\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n  text-align: center;\n`\nfunction analyzeString(\n  inputString: string\n): { word: string; count: number; percentage: string }[] {\n  // Step 1: Split the input string into an array of words\n  const words: string[] = inputString.split(/\\s+/)\n\n  // Step 2: Count the occurrences of each word using an object\n  const wordCounts: Record<string, number> = {}\n  words.forEach(word => {\n    if (wordCounts[word]) {\n      wordCounts[word]++\n    } else {\n      wordCounts[word] = 1\n    }\n  })\n\n  // Step 3: Calculate the total word count\n  const totalWordCount: number = words.length\n\n  // Step 4: Calculate the percentage for each word\n  const wordData: { word: string; count: number; percentage: string }[] = []\n  for (const word in wordCounts) {\n    const count: number = wordCounts[word]\n    const percentage: string = ((count / totalWordCount) * 100).toFixed(2) + \"%\"\n    wordData.push({ word, count, percentage })\n  }\n\n  return wordData\n}\n\nconst MarkdownTable = ({ text = \"\" }) => {\n  const [data, setData] = useState([])\n  useEffect(() => {\n    const arr: string[] | any = analyzeString(text)\n    setData(arr)\n  }, [text])\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <Th>Word</Th>\n          <Th>Count</Th>\n          <Th>%</Th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, index) => (\n          <tr key={index}>\n            <Td>{item.word}</Td>\n            <Td>{item.count}</Td>\n            <Td>{item.percentage}</Td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default MarkdownTable\n","import styled from \"styled-components\"\n\nexport const MarkdownStyles = `\n  font-family: Arial, sans-serif;\n  font-size: 16px;\n  line-height: 1.6;\n  color: #333;\n\n  h1 {\n    font-size: 2em;\n    margin: 1.2em 0;\n  }\n\n  h2 {\n    font-size: 1.5em;\n    margin: 1em 0;\n  }\n\n  h3 {\n    font-size: 1.2em;\n    margin: 1em 0;\n  }\n\n  p {\n    margin: 1em 0;\n  }\n\n  ul, ol {\n    margin: 1em 0;\n    padding-left: 1.5em;\n  }\n\n  li {\n    margin: 0.5em 0;\n  }\n\n  a {\n    color: #007acc;\n    text-decoration: underline;\n\n    &:hover {\n      color: #005fbf;\n    }\n  }\n`\n\nexport const WordsContWrapper = styled.div`\n  ${MarkdownStyles}\n  textarea {\n    border: 1px solid var(--color-blue);\n    width: 100%;\n    border-radius: 8px;\n    padding: 8px;\n  }\n`\n\nexport const CountInfo = styled.div`\n  font-size: 14px;\n  margin-top: 10px;\n  color: #777;\n  display: inline-block;\n`\nexport const StyledDropdownContainer = styled.div`\n  display: inline-block;\n  font-family: Arial, sans-serif;\n  margin-bottom: 24px;\n`\n\nexport const StyledLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  margin-bottom: 5px;\n  color: #333;\n`\n\nexport const CustomDropdown = styled.select`\n  appearance: none;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #fff;\n  color: #333;\n  cursor: pointer;\n  width: 200px; /* Adjust the width as needed */\n`\n","import React, { type ChangeEvent, useState } from \"react\"\n\nimport MarkdownTable from \"../../components/MarkdownTable\"\n\nimport * as S from \"./style\"\n\ninterface WordsContProps {\n  value: string\n}\n\nconst fontSizeOptions = [\n  { value: \"14px\", label: \"Small\" },\n  { value: \"16px\", label: \"Medium\" },\n  { value: \"18px\", label: \"Large\" },\n  { value: \"20px\", label: \"XL\" },\n  { value: \"24px\", label: \"XXL\" },\n]\n\nconst WordsCont: React.FC<WordsContProps> = () => {\n  const [inputValue, setInputValue] = useState<string>(\"\")\n  const [wordCount, setWordCount] = useState<number>(0)\n  const [charCount, setCharCount] = useState<number>(0)\n  const [lineCount, setLineCount] = useState<number>(0)\n  const [selectedFontSize, setSelectedFontSize] = useState<string>(\"16px\")\n\n  const handleFontSizeChange = e => {\n    setSelectedFontSize(e.target.value)\n    // You can perform any actions here based on the selected value\n  }\n\n  const countWords = (text: string): number => {\n    const words = text.trim().split(/\\s+/)\n    return words.filter(word => word !== \"\").length\n  }\n\n  const countChars = (text: string): number => {\n    return text.length\n  }\n\n  const countLines = (text: string): number => {\n    return text.split(\"\\n\").length\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const text = e.target.value\n    setInputValue(text)\n    const newWordCount = countWords(text)\n    const newCharCount = countChars(text)\n    const newLineCount = countLines(text)\n\n    // Update counts\n    setWordCount(newWordCount)\n    setCharCount(newCharCount)\n    setLineCount(newLineCount)\n  }\n\n  return (\n    <>\n      <S.StyledDropdownContainer>\n        <S.StyledLabel htmlFor=\"fontSizeDropdown\">\n          Select Preferred Font Size:\n        </S.StyledLabel>\n        <S.CustomDropdown\n          id=\"fontSizeDropdown\"\n          value={selectedFontSize}\n          onChange={handleFontSizeChange}\n        >\n          {fontSizeOptions.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </S.CustomDropdown>\n      </S.StyledDropdownContainer>\n      <S.WordsContWrapper style={{ fontSize: selectedFontSize }}>\n        <textarea\n          rows={10}\n          cols={50}\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Start typing...\"\n        />\n        <S.CountInfo>\n          Words: {wordCount} | Characters: {charCount} | Lines: {lineCount}\n        </S.CountInfo>\n      </S.WordsContWrapper>\n      <MarkdownTable text={inputValue} />\n    </>\n  )\n}\n\nexport default WordsCont\n","import React from \"react\"\n\nimport { type PageProps, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Comment from \"~/src/components/comment\"\nimport SEO from \"~/src/components/seo\"\nimport ClipPathGenerator from \"~/src/features/ClipPathGenerator\"\nimport ScrabbleWordFinder from \"~/src/features/ScrabbleWordFinder\"\nimport WordsCount from \"~/src/features/WordsCount\"\nimport Layout from \"~/src/layouts/layout\"\nimport Category from \"~/src/styles/category\"\nimport DateTime from \"~/src/styles/dateTime\"\nimport Markdown from \"~/src/styles/markdown\"\nimport { rhythm } from \"~/src/styles/typography\"\n\nconst RenderTool = ({ tool }) => {\n  if (!tool) return\n  switch (tool) {\n    case \"scrabbleWordFinder\":\n      return <ScrabbleWordFinder />\n    case \"wordsCount\":\n      return <WordsCount />\n    case \"clipPathGenerator\":\n      return <ClipPathGenerator />\n\n    default:\n      return <p>invalid tool name</p>\n  }\n}\n\nconst toolPost: React.FC<PageProps<Queries.Query>> = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark!\n  const { title, desc, thumbnail, date, category, tool } = frontmatter!\n  const ogImagePath =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    thumbnail &&\n    thumbnail?.childImageSharp?.gatsbyImageData!.images!.fallback!.src\n\n  return (\n    <Layout>\n      <SEO title={title} desc={desc} image={ogImagePath} />\n      <main>\n        <article>\n          <OuterWrapper>\n            <InnerWrapper>\n              <div>\n                <header>\n                  <Info>\n                    <PostCategory>{category}</PostCategory>\n                    <Time dateTime={date!}>{date}</Time>\n                  </Info>\n                  <Title>{title}</Title>\n                  <Desc>{desc}</Desc>\n                </header>\n                <img src={ogImagePath} />\n                <Divider />\n                <RenderTool tool={tool} />\n\n                <Divider />\n                <Markdown\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\n                  rhythm={rhythm}\n                />\n              </div>\n            </InnerWrapper>\n          </OuterWrapper>\n        </article>\n        <CommentWrap>\n          <Comment />\n        </CommentWrap>\n      </main>\n    </Layout>\n  )\n}\n\nconst OuterWrapper = styled.div`\n  margin-top: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-lg);\n  }\n`\n\nconst InnerWrapper = styled.div`\n  width: var(--post-width);\n  margin: 0 auto;\n  padding-bottom: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: 87.5%;\n  }\n`\n\nconst CommentWrap = styled.section`\n  width: 100%;\n  padding: 0 var(--padding-sm);\n  margin: 0 auto;\n  margin-bottom: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: auto;\n  }\n`\n\nconst PostCategory = styled(Category)`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n`\n\nconst Info = styled.div`\n  margin-bottom: var(--sizing-md);\n`\n\nconst Time = styled(DateTime)`\n  display: block;\n  margin-top: var(--sizing-xs);\n`\n\nconst Desc = styled.p`\n  margin-top: var(--sizing-lg);\n  line-height: 1.5;\n  font-size: var(--text-lg);\n  margin-bottom: 16px;\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.31579;\n    font-size: 1.1875rem;\n  }\n`\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--color-gray-3);\n  margin-top: var(--sizing-lg);\n  margin-bottom: var(--sizing-lg);\n`\n\nconst Title = styled.h1`\n  font-weight: var(--font-weight-bold);\n  line-height: 1.1875;\n  font-size: var(--text-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    line-height: 1.21875;\n    font-size: 2.5rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.21875;\n    font-size: 2rem;\n  }\n`\n\nexport const query = graphql`\n  query ToolPostPage($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        desc\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, layout: FIXED)\n          }\n        }\n        date(formatString: \"YYYY-MM-DD\")\n        category\n        tool\n      }\n    }\n  }\n`\n\nexport default toolPost\n"],"names":["src","LIGHT_THEME","DARK_THEME","Comment","_site$utterances","site","useSiteMetadata","repo","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","_containerRef$current2","themeMode","current","DARK","document","body","dataset","utterancesEl","querySelector","postThemeMessage","_utterancesEl$content","message","type","contentWindow","postMessage","createUtterancesEl","_containerRef$current","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","_ref","key","value","setAttribute","appendChild","React","ref","displayName","Category","styled","span","withConfig","componentId","DateTime","time","Container","div","width","_ref2","height","_ref3","img","DraggableCircle","CloseButton","button","ClipPathText","ButtonContainer","SelectDimensionsWrapper","NumberInput","input","Switch","SwitchInput","SwitchSpan","SwitchWrapper","setDimensions","setElements","setShowBg","showBg","S","className","htmlFor","id","onChange","e","target","checked","name","min","max","newWidth","parseInt","old","map","element","x","required","newHeight","y","getRandomLightColor","Math","floor","random","getRandomPosition","ClipPathGenerator","dimensions","useState","elements","backgroundColor","clipPathValue","points","length","point","xPercent","yPercent","toFixed","join","calculateClipPath","style","border","display","justifyContent","alignItems","flexDirection","SelectDimensions","Tree","position","top","left","right","bottom","background","clipPath","backgroundImage","index","onMouseDown","event","handleMouseDown","elementIndex","preventDefault","offsetX","clientX","offsetY","clientY","onMouseMove","updatedElements","_toConsumableArray","onMouseUp","removeEventListener","addEventListener","onClick","filter","_","handleRemoveCircle","handleAddCircle","newElement","concat","ScrabbleFinderContainer","InputContainer","form","ScrabbleInput","ResultContainer","ResultItem","ItemWrapper","LettersCount","WordsWrapper","ScrabbleWordFinder","wordsData","setWordData","inputText","setInputText","word_arr","onSubmit","wordArray","userInput","toLowerCase","categorizedWords","word","lowercaseWord","includes","wordLength","push","categorizeWords","ALL_WORDS_DATA","searchText","placeholder","item","Table","table","Th","th","Td","td","text","data","setData","arr","inputString","words","split","wordCounts","totalWordCount","wordData","count","percentage","analyzeString","WordsContWrapper","CountInfo","StyledDropdownContainer","StyledLabel","CustomDropdown","select","fontSizeOptions","WordsCont","inputValue","setInputValue","wordCount","setWordCount","charCount","setCharCount","lineCount","setLineCount","selectedFontSize","setSelectedFontSize","option","fontSize","rows","cols","newWordCount","trim","countWords","newCharCount","countChars","newLineCount","countLines","MarkdownTable","RenderTool","tool","WordsCount","OuterWrapper","device","sm","InnerWrapper","_ref4","CommentWrap","section","_ref5","PostCategory","Info","Time","Desc","p","_ref6","Divider","Title","h1","_ref7","md","_ref8","_thumbnail$childImage","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","ogImagePath","childImageSharp","gatsbyImageData","images","fallback","Layout","SEO","image","dateTime","Markdown","dangerouslySetInnerHTML","__html","rhythm"],"sourceRoot":""}