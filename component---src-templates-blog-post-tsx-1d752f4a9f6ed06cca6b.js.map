{"version":3,"file":"component---src-templates-blog-post-tsx-1d752f4a9f6ed06cca6b.js","mappings":"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","sources":["webpack://gatsby-starter-apple/./src/components/comment.tsx","webpack://gatsby-starter-apple/./src/styles/category.ts","webpack://gatsby-starter-apple/./src/styles/dateTime.ts","webpack://gatsby-starter-apple/./src/templates/blogPost.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from \"react\"\n\nimport { DARK } from \"~/src/constants/theme\"\nimport useSiteMetadata from \"~/src/hooks/useSiteMetadata\"\nimport ThemeContext from \"~/src/stores/themeContext\"\n\nconst src = \"https://utteranc.es\"\nconst utterancesSelector = \"iframe.utterances-frame\"\nconst LIGHT_THEME = \"github-light\"\nconst DARK_THEME = \"github-dark\"\n\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\n\nconst Comment = () => {\n  const site = useSiteMetadata()\n  const { repo } = site.utterances ?? { repo: undefined }\n  const theme = useContext(ThemeContext)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isUtterancesCreated = useRef(false)\n\n  useEffect(() => {\n    console.log({ repo })\n    if (!repo) return\n    let themeMode: ThemeMode\n\n    if (!isUtterancesCreated.current) {\n      themeMode =\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\n\n    const createUtterancesEl = () => {\n      const comment = document.createElement(\"script\")\n      const attributes = {\n        src: `${src}/client.js`,\n        // repo: \"geeks-helper/the-helper\",\n        repo: \"geeks-helper/the-helper-comment\",\n        \"issue-term\": \"url\",\n        label: \"comment\",\n        theme: themeMode,\n        crossOrigin: \"anonymous\",\n        async: \"true\",\n      }\n      Object.entries(attributes).forEach(([key, value]) => {\n        comment.setAttribute(key, value)\n      })\n      containerRef.current?.appendChild(comment)\n      isUtterancesCreated.current = true\n    }\n\n    const utterancesEl = containerRef.current?.querySelector(\n      utterancesSelector\n    ) as HTMLIFrameElement\n\n    const postThemeMessage = () => {\n      if (!utterancesEl) return\n      const message = {\n        type: \"set-theme\",\n        theme: themeMode,\n      }\n      utterancesEl?.contentWindow?.postMessage(message, src)\n    }\n    console.log({ bbbb: isUtterancesCreated.current })\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\n  }, [repo, theme])\n  return <div ref={containerRef} />\n}\n\nComment.displayName = \"comment\"\n\nexport default Comment\n","import styled from \"styled-components\"\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`\n\nexport default Category\n","import styled from \"styled-components\"\n\nconst DateTime = styled.time`\n  margin-top: 12px;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-regular);\n  color: var(--color-text-3);\n`\n\nexport default DateTime\n","import React from \"react\"\n\nimport { type PageProps, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Comment from \"~/src/components/comment\"\nimport SEO from \"~/src/components/seo\"\nimport Layout from \"~/src/layouts/layout\"\nimport Category from \"~/src/styles/category\"\nimport DateTime from \"~/src/styles/dateTime\"\nimport Markdown from \"~/src/styles/markdown\"\nimport { rhythm } from \"~/src/styles/typography\"\n\nconst BlogPost: React.FC<PageProps<Queries.Query>> = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark!\n  const { title, desc, thumbnail, date, category } = frontmatter!\n\n  const ogImagePath =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    thumbnail &&\n    thumbnail?.childImageSharp?.gatsbyImageData!.images!.fallback!.src\n\n  return (\n    <Layout>\n      <SEO title={title} desc={desc} image={ogImagePath} />\n      <main>\n        <article>\n          <OuterWrapper>\n            <InnerWrapper>\n              <div>\n                <header>\n                  <Info>\n                    <PostCategory>{category}</PostCategory>\n                    <Time dateTime={date!}>{date}</Time>\n                  </Info>\n                  <Title>{title}</Title>\n                  <Desc>{desc}</Desc>\n                </header>\n                <Divider />\n                <Markdown\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\n                  rhythm={rhythm}\n                />\n              </div>\n            </InnerWrapper>\n          </OuterWrapper>\n        </article>\n        <CommentWrap style={{ border: \"1px solid red\" }}>\n          <Comment />\n        </CommentWrap>\n      </main>\n    </Layout>\n  )\n}\n\nconst OuterWrapper = styled.div`\n  margin-top: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-lg);\n  }\n`\n\nconst InnerWrapper = styled.div`\n  width: var(--post-width);\n  margin: 0 auto;\n  padding-bottom: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: 87.5%;\n  }\n`\n\nconst CommentWrap = styled.section`\n  width: 100%;\n  padding: 0 var(--padding-sm);\n  margin: 0 auto;\n  margin-bottom: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: auto;\n  }\n`\n\nconst PostCategory = styled(Category)`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n`\n\nconst Info = styled.div`\n  margin-bottom: var(--sizing-md);\n`\n\nconst Time = styled(DateTime)`\n  display: block;\n  margin-top: var(--sizing-xs);\n`\n\nconst Desc = styled.p`\n  margin-top: var(--sizing-lg);\n  line-height: 1.5;\n  font-size: var(--text-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.31579;\n    font-size: 1.1875rem;\n  }\n`\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--color-gray-3);\n  margin-top: var(--sizing-lg);\n  margin-bottom: var(--sizing-lg);\n`\n\nconst Title = styled.h1`\n  font-weight: var(--font-weight-bold);\n  line-height: 1.1875;\n  font-size: var(--text-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    line-height: 1.21875;\n    font-size: 2.5rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.21875;\n    font-size: 2rem;\n  }\n`\n\nexport const query = graphql`\n  query BlogPostPage($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        desc\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, layout: FIXED)\n          }\n        }\n        date(formatString: \"YYYY-MM-DD\")\n        category\n      }\n    }\n  }\n`\n\nexport default BlogPost\n"],"names":["src","LIGHT_THEME","DARK_THEME","Comment","_site$utterances","site","useSiteMetadata","repo","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","_containerRef$current2","console","log","themeMode","current","DARK","document","body","dataset","utterancesEl","querySelector","bbbb","postThemeMessage","_utterancesEl$content","message","type","contentWindow","postMessage","createUtterancesEl","_containerRef$current","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","_ref","key","value","setAttribute","appendChild","React","ref","displayName","Category","styled","span","withConfig","componentId","DateTime","time","OuterWrapper","div","_ref2","device","sm","InnerWrapper","_ref3","CommentWrap","section","_ref4","PostCategory","Info","Time","Desc","p","_ref5","Divider","Title","h1","_ref6","md","_ref7","_thumbnail$childImage","data","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","ogImagePath","childImageSharp","gatsbyImageData","images","fallback","Layout","SEO","image","dateTime","Markdown","dangerouslySetInnerHTML","__html","rhythm","style","border"],"sourceRoot":""}